#!/usr/bin/expect
proc reallyInstall { name } {
	spawn tlmgri $name
	interact
	lassign [wait] pid spawnid os_error_flag value
	send_user "Error code: $os_error_flag $value\n"
	if {$value != 0} {
		send_user "
Installing $name with tlmgri has failed. This happens if the file is not in
a package or tlmgri fails for some other reason. You can try running the
command manually: tlmgri $name. Aborting...
"
		exit 1
	}
}

proc tryInstallPackage { name } {
	global cmd argv latexpid spawn_id

	set spawn_id $latexpid
	close

	send_user "\nTrying to install missing package\n"
	reallyInstall "$name"

	runCmd
}

proc runCmd { } {
	global cmd argv latexpid spawn_id
	spawn $cmd {*}$argv
	set latexpid $spawn_id

	expect {
		# Regular sty file is missing
		  -re "File ..*-eps-converted-to.pdf. not found" {
			tryInstallPackage "epstopdf"
		} -re "File .(.*). not found" {
			tryInstallPackage $expect_out(1,string)
		# Bibtex ldf file is missing
		} -re "language definition file (.*) was not foun" {
			tryInstallPackage $expect_out(1,string)
		# Font encoding file is missing
		} -re "Encoding file .(.*). not found" {
			tryInstallPackage $expect_out(1,string)
		# Glossaries language module (not working yet...)
		} -re "(glossaries-.*)' or similar" {
			tryInstallPackage $expect_out(1,string)
		# Timeout
		} timeout {
			send_user "Compilation timed out???"
			exit 1
		}
	}
}

# Start latex and save the pid to kill it later
set cmd [lindex $argv 0]
set argv [lrange $argv 1 end]

# Check commands existence
spawn "which" $cmd
lassign [wait] pid spawnid os_error_flag value
if {$value != 0} {
	send_user "Command $cmd not found. Do you want to try to install it? Y/N\n"
	expect_user {
		Y { reallyInstall "$cmd" }
		N { send_user "Okay... Bye\n"; exit 1 }
	}
}

# Initialize the pid to kill later
set latexpid 0

runCmd
